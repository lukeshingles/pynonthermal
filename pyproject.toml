[build-system]
requires = ["setuptools>=68.2", "setuptools_scm[toml]>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "pynonthermal"
authors = [{ name = "Luke J. Shingles", email = "luke.shingles@gmail.com" }]
description = "A non-thermal electron deposition (Spencer-Fano equation) solver."
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Intended Audience :: Science/Research",
]
dynamic = ["version"]
requires-python = ">=3.11"
license = { file = "LICENSE" }
readme = { file = "README.md", content-type = 'text/markdown' }
dependencies = [
    "artistools>=2024.07.04.2",
    "matplotlib>=3.9.1",
    "numpy>=1.19.4",
    "polars>=1.20.0",
    "scipy>=1.5.4",
]

[dependency-groups]
dev = [
    "mypy[faster-cache]>=1.14.1",
    "pre-commit>=4.0.1",
    "pyright>=1.1.387",
    "pytest>=6.2.2",
    "pytest-codspeed>=2.2.1",
    "pytest-cov>=2.10.1",
    "pytest-xdist[psutil]>=3.6.1",
    "ruff>=0.8.6",
    "typeguard>=4.1.5",
    "types-PyYAML>=6.0.12.20250326",
]

[project.urls]
Repository = "https://www.github.com/lukeshingles/pynonthermal/"

[tool.mypy]
check_untyped_defs = true
disallow_any_explicit = false
disallow_any_generics = true
disallow_any_unimported = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
error_summary = true
enable_error_code = [
    "comparison-overlap",
    "ignore-without-code",
    "redundant-expr",
    "redundant-self",
    "truthy-bool",
    "unused-awaitable",
]
exclude = "(build)|(dist)|(tests)|(data)|(.venv)|(venv)|(_version.py)"
ignore_missing_imports = true
implicit_optional = false
implicit_reexport = false
local_partial_types = true
packages = "pynonthermal"
plugins = 'numpy.typing.mypy_plugin'
pretty = true
python_version = '3.13'
scripts_are_modules = true
strict_equality = true
extra_checks = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pyright]
deprecateTypingAliases = true
enableTypeIgnoreComments = false # leave these for mypy to interpret
exclude = [
    '**/node_modules',
    '**/__pycache__',
    '**/.*',
    '.venv',
    'build',
    'dist',
    'target',
    '_version.py',
]
extraPaths = ["../artistools/"]
reportMissingTypeStubs = false
reportUnecessaryTypeIgnoreComment = true
reportUnknownMemberType = false
reportUnusedVariable = true
targetVersion = "3.13"
typeCheckingMode = "strict"
useLibraryCodeForTypes = true

[tool.pytest.ini_options]
addopts = " --durations=0  --typeguard-packages=pynonthermal -n auto"

[tool.ruff]
line-length = 120
target-version = "py311"
fix = true
show-fixes = true
extend-exclude = ["_version.py"]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN401",  # any-type
    "C901",    # complex-structure
    "COM812",  # missing-trailing-comma
    "CPY001",  # missing-copyright-notice
    "D100",    # undocumented-public-module
    "D101",    # undocumented-public-class
    "D102",    # undocumented-public-method
    "D103",    # undocumented-public-function
    "D104",    # undocumented-public-package
    "D107",    # undocumented-public-init
    "D203",    # one-blank-line-before-class
    "D205",    # blank-line-after-summary
    "D213",    # multi-line-summary-second-line
    "D417",    # undocumented-param
    "E501",    # Line too long
    "E741",    # mixed-case-variable-in-global-scope
    "ERA001",  # commented-out-code
    "FBT",
    "FIX002",  # line contains TODO
    "N802",    # Function name should be lowercase
    "N803",    # Argument name should be lowercase
    "N806",    # non-lowercase-variable-in-function
    "N816",    # variable-name-too-short
    "PLC0414", # useless-import-alias
    "PLR0911", # too-many-return-statements
    "PLR0912", # too-many-branches
    "PLR0913", # too-many-arguments
    "PLR0915", # too-many-statements
    "PLR2004", # magic-value-comparison
    "S101",    # Use of assert detected
    "T201",    # print found
    "TD002",   # missing-todo-author
    "TD003",   # missing-todo-link
]
fixable = ["ALL"]
unfixable = [
    "COM812", # missing-trailing-comma
    "ERA001", # commented-out-code (will just delete it!)
    "F401",   # unused-import
    "F841",   # unused-variable
    "SIM222", # expr-or-true
    "SIM223", # expr-and-false
]

[tool.ruff.lint.flake8-import-conventions.extend-aliases]
"artistools" = "at"
"matplotlib" = "mpl"
"matplotlib.pyplot" = "plt"
"matplotlib.typing" = "mplt"
"numpy.typing" = "npt"
"typing" = "t"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
force-single-line = true
order-by-type = false

[tool.setuptools]
packages = ["pynonthermal"]
include-package-data = true
license-files = ["LICENSE"]
exclude-package-data = { "pynonthermal" = [".*", ".venv", "venv"] }

[tool.setuptools_scm]
version_file = "_version.py"
local_scheme = "no-local-version"

[tool.vulture]
exclude = [".*", "build/", ".eggs/"]
paths = ["pynonthermal"]
sort_by_size = true
